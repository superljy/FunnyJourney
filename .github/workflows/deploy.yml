name: 🚀 Deploy FunnyJourney to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for better caching
      
      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: 🔧 Install Dependencies
        run: |
          npm ci --prefer-offline --no-audit
          
      - name: 🧪 Run Linting
        run: |
          npm run lint
          
      - name: 🔨 Build Production Bundle
        run: |
          npm run build
          
      - name: 📊 Analyze Bundle Size
        run: |
          echo "📦 Bundle Analysis:"
          du -sh dist/
          ls -la dist/assets/ | head -10
          
      - name: 🔍 Verify Build Output
        run: |
          echo "✅ Verifying build output..."
          [ -f "dist/index-vue.html" ] && echo "✓ Vue app built successfully" || echo "✗ Vue app build failed"
          [ -f "dist/index.html" ] && echo "✓ Static homepage exists" || echo "✗ Static homepage missing"
          [ -d "dist/assets" ] && echo "✓ Assets directory exists" || echo "✗ Assets directory missing"
          
      - name: 📋 Setup Pages Configuration
        uses: actions/configure-pages@v4
        
      - name: 📄 Upload Build Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: 🌐 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: 🎉 Deployment Success
        run: |
          echo "🚀 Deployment completed successfully!"
          echo "🌍 Site URL: ${{ steps.deployment.outputs.page_url }}"
          
      - name: 🔗 Warm Up Site
        run: |
          echo "🔥 Warming up the deployed site..."
          curl -I "${{ steps.deployment.outputs.page_url }}" || echo "Site warming failed, but deployment succeeded"

  # Performance testing job (optional)
  performance-test:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: deploy
    continue-on-error: true
    
    steps:
      - name: 📁 Checkout Repository  
        uses: actions/checkout@v4
        
      - name: ⚡ Lighthouse Performance Check
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ needs.deploy.outputs.page_url }}
          budgetPath: '.github/lighthouse/budget.json' # Optional: performance budget
          uploadArtifacts: true
          temporaryPublicStorage: true